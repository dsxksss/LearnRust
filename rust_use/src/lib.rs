//默认情况下rust里的大部分作用域或者模块等地方都是私有的
//你需要给他加上pub关键字表示我这个东西是public(公共)的

//如果某个模块或者作用域的父级是pub的,不代表它的子级也是pub的,
//如果需要使用其子级的内容,也要给子级的前面加上pub

/*
小贴士:
struct、enum、 之类的数据结构默认也是私有的
如果把struct设置为pub访问属性的话,其内容字段也得设置为pub
enum则不用,只要设置为pub,其内容也会是pub的
*/
pub mod f_add {
    pub mod z_add {
        pub fn add_some_data() -> u8 {
            20
        }
    }
    mod z_add2 {
        fn _add_some_data2() -> u8 {
            30
        }
    }
}

//将模块内容放到其他文件里
//如果mod(模块)后面模块名字后面不是跟着大括号{}，而是;号的话
//rust会自己去到src目录里去寻找与此模块名相同名字的.rs文件

//如果要将模块的"子"内容放到其他文件里的话,则需要再创建一个和
//父模块同名的文件夹,并放置到此文件夹里才可以正常使用

//crate是表示“这个”文件系统的根目录,下面调用这个函数是使用的绝对路径调用的
//如果使用者和被使用者存在于同个目录下,那么它们则可以使用相对路径
//例如:f_add::z_add::add_some_data()  <-  相对路径
use crate::f_add::z_add::add_some_data;

//使用pub use 重新导出名称
//·使用use将路径(名称)导入到作用域内后，该名称在此作用域内是私有的
//·pub use:重导出
//··将条目引入作用域
//··该条目可以被外部代码引入到它们的作用域

pub fn _funtion_a() -> u8 {
    add_some_data()
}
